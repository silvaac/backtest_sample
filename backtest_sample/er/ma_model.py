# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/er.ma_model.ipynb.

# %% auto 0
__all__ = ['ma_model']

# %% ../../nbs/er.ma_model.ipynb 4
import pandas as pd
import numpy as np

# %% ../../nbs/er.ma_model.ipynb 5
class ma_model:
    def __init__(self, data, param):
        """
        Initialize the moving average (ma) class with data and parameters.
        
        Parameters:
        - data: A DataFrame containing OHLCV (Open, High, Low, Close, Volume) data.
        - param: A dictionary containing parameters 'mawin' (moving average window) and 'sdwin' (standard deviation window).
        """
        self.mawin = param['mawin']  # Moving average window size
        self.sdwin = param['sdwin']  # Standard deviation window size
        self.ohlcv = data  # OHLCAV data: array

    def y_hat(self):
        """
        Calculate the yHat value, which is a normalized measure of the recent returns.
        
        Returns:
        - A single value representing the normalized recent returns.
        """
        # Calculate the log returns of the adjusted close prices
        r = np.diff(np.log(self.ohlcv[:,4]))
        
        # Calculate the mean of the recent returns over the moving average window
        mu = np.mean(r[-self.mawin:])
        
        # Calculate the standard deviation of the recent returns over the standard deviation window
        sig = np.std(r[-self.sdwin:])
        
        # Return the hyperbolic tangent of the ratio of mean to standard deviation
        # in order to keep the values between +/-1
        out ={}
        out['y_hat']    = float(np.round(np.tanh(mu / sig),4))
        return out
